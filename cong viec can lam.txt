- admin grid
	+ create admin grid and follow the available code ? 
		* create table database -> create resource model and model collection
		* create routes in adminhtml/routes.xml with full url mageplaza/post/index
		* create admin menu, menu.xml
		* create Controller for Adminhtml/Post/Index.php
		* Index.php : getConfig->getTitle->prepend((_('Posts')))
		* 
	+ how many files we need to create ? table, menu, routes, controller, 
		* InstallSchema
		* menu.xml
		* adminhtml/routes.xml
		* 


- Revise : 
	* events?
		+ how many files we need to create? ---- 3 files: controller, events.xml , observer
	* get data from configuration?
		+ create : system.xml
		+ get data : use block and template, ScopeInterface
	* get data from table?
		+ create table : installschema, installdata, upgrade... 
		+ get data : call to resourceModel , collection, ->getCollection
		+ show into frontend: 

- what is essential things of BLOCK and CONTROLLER?
	+ BLOCK : EXTENDS Template
	+ COTNROLLER : EXTENDS Action

- how to create command line? have agurment and without argument
	+ how many requisite files?  etc/di.xml
		* di.xml : type = commandlist , item = console\sayhello
		* \sayhello : 
			> protected function configure and execute
			> configure : setName , setDecrisption, setDefinition , we also create array $option = new InputOption at the end is parent:configure();
			> execute(inputinterface,outputinterface) : show result, use getOption() to check that have or not $option
		

- why we have to create commandline? : 
	* indexer , deploy static file view , css->less ,transtate dictionary 
	
- Merge menu and separate many parts : 
	* it depends on parent , example :  hello 1 and hello 2 are childs of parent catalog , hello 12 , hello 22 are childs of hello 1 and hello 2

- how to change routing, instead of accessing login we redirect it to ur module, ur controller
	* Change routing:
		> use 'before' , module route A(custom routes) before route B(login, register ....) 
		> set another url have the same structure
	
- Indexer , what is it ,  why we use it and what problem if we dont use it
	* improve performance of storefront, 
	* a huge structure including users, prices , categories ...

	* indexer.xml : id , view_id(is id of mview.xml), class model/index/test
	* mview.xml : id, class , group , subscriptions( table name = "abc" entiy_colum ="entity_id")
	* index/test: when a product is saved , test.php will be loaded 

---------------------------------------------------------------------------

- Add customer attributes
	+  InstallDAta : install() addAttribute(Model\customer , attribute 'simple_attribute',[]);

- Add Product Attributes	
	+ InstallData : install() addAttribute(Model\Product , attribute 'simple_attribute' , [])

- Add Category Attributes
	+ InstallData : install() addAttribute(Model\Category , attribute 'simple_data' , [])

- Rewrite Controller and Chage routing , compare these actions
	* it's have the same definition

---------------------------------------------------------------


- What is Cron Job?
	+ Cron Job will run automatically in exactly time and date, 
	  it's important to set schedule,as reindexing , auto-update currence rate, mail..
	
- How to create cron job
	
	+ Cron/Test.php 
		* execute() : create $writer(zend/log/writer) use cron.log in var/log/cron.log and $logger(zend/log/logger), 
			$logger->addWriter($writer)
			$logger->info(__METHOD__)

	+ crontab.xml
		* group : id = 'default'
			> job : instance = ..\cron\test method = execute name = 
			> schedule

-----------WIDGET--------------------
- that is widget?
	* it's a powerfull fucntionalities: dynamic product data, dynamic lists of recently viewed products
		promotional banners
	* it's similar to an optimized frontend extension

- How to create a widget in magento2 ( 3 files: widget => block =>  )
	* declare widget : etc/widget.xml
		> widget.xml : class = Block\Widget\Posts id = ...
			label , discription , paramaters name = will be send to template
	
	-> create widget (block , parameter name = abc ->template , label , )

-------------Get info from Header ---------

- what we need to get?

	* logo url , alt text , logo size , ....
	* determine Block of attributes (Header Logo) what we need to get.
	* 
	
-------------\Magento\Catalog\Model\ProductRepository $productRepository----------

- get product by sku  : get($sku)
- get product by id :	getById($id)
- get key for cache  : getCacheKey($data)

